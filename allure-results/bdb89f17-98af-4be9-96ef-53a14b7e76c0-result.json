{"name": "test_xfail_not_run", "status": "skipped", "statusDetails": {"message": "_pytest.outcomes.XFailed: [NOTRUN]", "trace": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x0000016DE98E5AE8>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(cls, func, when, reraise=None) -> \"CallInfo\":\n        #: context of invocation: one of \"setup\", \"call\",\n        #: \"teardown\", \"memocollect\"\n        start = time()\n        excinfo = None\n        try:\n>           result = func()\n\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\_pytest\\runner.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\_pytest\\runner.py:217: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\_pytest\\skipping.py:93: in pytest_runtest_setup\n    check_xfail_no_run(item)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nitem = <Function test_xfail_not_run>\n\n    def check_xfail_no_run(item):\n        \"\"\"check xfail(run=False)\"\"\"\n        if not item.config.option.runxfail:\n            evalxfail = item._store[evalxfail_key]\n            if evalxfail.istrue():\n                if not evalxfail.get(\"run\", True):\n>                   xfail(\"[NOTRUN] \" + evalxfail.getexplanation())\nE                   _pytest.outcomes.XFailed: [NOTRUN]\n\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python36\\lib\\site-packages\\_pytest\\skipping.py:111: XFailed"}, "description": "\n        run=False表示这条用例不用执行\n        ", "start": 1593429176264, "stop": 1593429176264, "uuid": "ab9a3627-d1cd-4dac-8b1f-2667ae870f4e", "historyId": "e4c8f58bb9381dbcdd35cf7a17339a5f", "testCaseId": "a540d15f54461582abcd1bb98563314d", "fullName": "tests.test_marks.TestMarks#test_xfail_not_run", "labels": [{"name": "tag", "value": "@pytest.mark.xfail(run=False)"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_marks"}, {"name": "subSuite", "value": "TestMarks"}, {"name": "host", "value": "PC-20190912OQVB"}, {"name": "thread", "value": "5048-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_marks"}]}