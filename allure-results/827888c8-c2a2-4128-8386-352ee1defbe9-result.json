{"name": "test_in_theaters[验证响应中start和count与请求中的参数一致]", "status": "failed", "statusDetails": {"message": "AssertionError: 实际的标题是：正在上映的电影-北京\nassert '正在上映的电影-北京' == '正在上映的电影-上海'\n  - 正在上映的电影-上海\n  ?         ^^\n  + 正在上映的电影-北京\n  ?         ^^", "trace": "self = <test_in_theaters.TestInTheaters object at 0x0000022CA2E4C898>, env = {'host': {'douban': 'http://api.douban.com'}}, case = '验证响应中start和count与请求中的参数一致'\nhttp = {'headers': {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chr...T', 'params': {'apikey': '0df993c66c0c636e29ecbb5344252a4a', 'count': 10, 'start': 0}, 'path': '/v2/movie/in_theaters'}\nexpected = {'response': {'count': 10, 'start': 0, 'title': '正在上映的电影-上海'}}, preparation = '在数据库中准备测试数据'\n\n    @pytest.mark.parametrize(\"case,http,expected\", list(list_params), ids=cases)\n    def test_in_theaters(self, env, case, http, expected, preparation):\n        r = requests.request(http[\"method\"],\n                             url=env[\"host\"][\"douban\"] + http[\"path\"],\n                             headers=http[\"headers\"],\n                             params=http[\"params\"])\n        response = r.json()\n        assert response[\"count\"] == expected['response'][\"count\"]\n        assert response[\"start\"] == expected['response'][\"start\"]\n>       assert response[\"title\"] == expected['response'][\"title\"], \"实际的标题是：{}\".format(response[\"title\"])\nE       AssertionError: 实际的标题是：正在上映的电影-北京\nE       assert '正在上映的电影-北京' == '正在上映的电影-上海'\nE         - 正在上映的电影-上海\nE         ?         ^^\nE         + 正在上映的电影-北京\nE         ?         ^^\n\ntests\\test_in_theaters.py:26: AssertionError"}, "steps": [{"name": "校验结果", "status": "passed", "attachments": [{"name": " response[\"title\"] ", "source": "915268e1-1bd5-4ddf-88f7-39f180e1f5e5-attachment.attach"}, {"name": " expected['response'][\"title\"], \"实际的标题是：{}\".format(response[\"title\"])", "source": "f4cac687-3c16-4d6f-a009-1bed1a720571-attachment.attach"}], "start": 1593429989612, "stop": 1593429989614}], "attachments": [{"name": "stdout", "source": "22ef9bba-d1c4-4ac3-b56d-055f32290d1e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "'验证响应中start和count与请求中的参数一致'"}, {"name": "http", "value": "{'method': 'GET', 'path': '/v2/movie/in_theaters', 'headers': {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36'}, 'params': {'apikey': '0df993c66c0c636e29ecbb5344252a4a', 'start': 0, 'count': 10}}"}, {"name": "expected", "value": "{'response': {'title': '正在上映的电影-上海', 'count': 10, 'start': 0}}"}], "start": 1593429988507, "stop": 1593429989615, "uuid": "c0e03cbf-03a0-4bcd-b36c-af48623bfb80", "historyId": "74b92abf603adb79ad179aa3e68d1ddc", "testCaseId": "b507d08de39442fefc429b327c33fb39", "fullName": "tests.test_in_theaters.TestInTheaters#test_in_theaters", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_in_theaters"}, {"name": "subSuite", "value": "TestInTheaters"}, {"name": "host", "value": "PC-20190912OQVB"}, {"name": "thread", "value": "11948-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_in_theaters"}]}